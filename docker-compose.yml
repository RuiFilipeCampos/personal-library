


x-mysql-env-configuration:
  &mysql-env-configuration
  - MYSQL_HOST=${MYSQL_HOST:-mysql}
  - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err}
  - MYSQL_DATABASE=${MYSQL_DATABASE:?err}
  - MYSQL_USER=${MYSQL_USER:?err}
  - MYSQL_PASSWORD=${MYSQL_PASSWORD:?err}

x-redis-env-configuration:
  &redis-env-configuration
  - REDIS_HOST=${REDIS_HOST:-redis}
  - REDIS_PASSWORD=${REDIS_PASSWORD:?err}

services:
  mysql:
    image: "mysql:8.0.29"
    command: --default-authentication-plugin=mysql_native_password
    environment: *mysql-env-configuration
    cap_add:
      - SYS_NICE
    healthcheck:
      test: 'mysql -u$MYSQL_USER -p$MYSQL_PASSWORD --execute "SHOW DATABASES;"'
      interval: 5s
      retries: 60

  redis:
    image: "redis"
    command: redis-server --requirepass $REDIS_PASSWORD

  api-server:
    image: image
    environment: [*mysql-env-configuration, *redis-env-configuration]
    healthcheck:
      test: 'curl http://localhost/api/healthcheck'
      interval: 5s
      retries: 60
    labels:
      - "traefik.enable=true"
      - traefik.http.services.api-server.loadbalancer.server.port=80
      - traefik.http.routers.api-server.rule=PathPrefix(`/`)
      - "traefik.http.routers.api-server.entrypoints=web"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  traefik:
    image: "traefik:v2.10"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
